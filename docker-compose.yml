services:
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  redpanda:
    image: redpandadata/redpanda:v24.1.9
    container_name: redpanda
    command: >
      redpanda start
      --overprovisioned
      --smp 1
      --memory 512M
      --reserve-memory 0M
      --node-id 0
      --check=false
    ports:
      - "9092:9092"
      - "9644:9644"   # Admin API
    healthcheck:
      test: ["CMD", "bash", "-lc", "rpk cluster info -X brokers=localhost:9092 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30

  producer:
    build: ./producer
    depends_on:
      redpanda:
        condition: service_healthy
    environment:
      KAFKA_BROKER: ${KAFKA_BROKER}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
    volumes:
      - ./data:/app/data:ro
    command: ["python", "producer.py", "/app/data/bitcoin_sample.csv"]

  spark:
    image: bitnami/spark:3.5
    depends_on:
      postgres:
        condition: service_healthy
      redpanda:
        condition: service_started
    environment:
      SPARK_MODE: client
      SPARK_SUBMIT_ARGS: "--packages org.postgresql:postgresql:42.7.3,org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.0"
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
      KAFKA_BROKER: ${KAFKA_BROKER}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      SPARK_APP_NAME: ${SPARK_APP_NAME}
    volumes:
      - ./spark:/opt/spark-apps
      - ./data:/app/data:ro
    command: ["spark-submit", "/opt/spark-apps/spark_job.py"]
